/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Settings;

import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author KakaPatria
 */
public class ForgotPassword extends javax.swing.JFrame {

    /**
     * Creates new form ForgotPassword
     */
    private String generatedOtp;
    public ForgotPassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSendOtp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOtp = new javax.swing.JTextField();
        btnVerifyOtp = new javax.swing.JButton();
        txtNewPassword = new javax.swing.JPasswordField();
        btnResetPassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 28, 303, -1));

        jLabel3.setText("PASSWORD BARU");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 139, -1, -1));

        btnSendOtp.setText("Kirim OTP");
        btnSendOtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendOtpActionPerformed(evt);
            }
        });
        jPanel1.add(btnSendOtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 27, 106, -1));

        jLabel1.setText("EMAIL");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setText("KODE OTP");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 72, -1, -1));
        jPanel1.add(txtOtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 94, 303, -1));

        btnVerifyOtp.setText("Verifikasi OTP");
        btnVerifyOtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyOtpActionPerformed(evt);
            }
        });
        jPanel1.add(btnVerifyOtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 94, -1, -1));
        jPanel1.add(txtNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 161, 302, -1));

        btnResetPassword.setText("Reset");
        btnResetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(btnResetPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 100, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendOtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendOtpActionPerformed
        String email = txtEmail.getText();
    
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan alamat email Anda.");
            return;
        }
        
        // Menghasilkan OTP 6 digit
        Random rand = new Random();
        generatedOtp = String.format("%06d", rand.nextInt(1000000));
        
        // Kirim OTP ke email
        sendEmailOtp(email, generatedOtp);
        
        JOptionPane.showMessageDialog(this, "OTP telah dikirim ke email Anda.");
    
    }//GEN-LAST:event_btnSendOtpActionPerformed

    private void btnVerifyOtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyOtpActionPerformed
      String otp = txtOtp.getText();
    
        if (otp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan OTP.");
            return;
        }
    
        if (otp.equals(generatedOtp)) {
            JOptionPane.showMessageDialog(this, "OTP terverifikasi. Anda sekarang dapat mereset kata sandi Anda.");
            txtNewPassword.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "OTP tidak valid. Silakan coba lagi.");
        }

    }//GEN-LAST:event_btnVerifyOtpActionPerformed

    private void btnResetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordActionPerformed
      String newPassword = new String(txtNewPassword.getPassword());
    
        if (newPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan kata sandi baru.");
            return;
        }
    
        // Perbarui kata sandi di database
        updatePasswordInDatabase(txtEmail.getText(), newPassword);
        
        JOptionPane.showMessageDialog(this, "Kata sandi Anda telah berhasil direset.");
    }


    // Placeholder untuk mengirim email dengan OTP
    private void sendEmailOtp(String email, String otp) {
       final String username = "kakapatria22@gmail.com"; // Replace with your email
    final String password = "Kakapatriaqw23"; // Replace with your email password
    String host = "smtp.gmail.com"; // Replace with your SMTP server
    int port = 587; // Common SMTP port, replace if necessary

    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", host);
    props.put("mail.smtp.port", port);

    Session session = Session.getInstance(props, new javax.mail.Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(username, password);
        }
    });

    try {
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(username));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
        message.setSubject("Kode OTP Anda");
        message.setText("Kode OTP Anda adalah: " + otp);

        Transport.send(message);

        JOptionPane.showMessageDialog(this, "OTP telah dikirim ke email Anda.");
    } catch (MessagingException e) {
        JOptionPane.showMessageDialog(this, "Gagal mengirim OTP. Silakan coba lagi.");
        e.printStackTrace();
    }
    
    }//GEN-LAST:event_btnResetPasswordActionPerformed

    
     private void updatePasswordInDatabase(String email, String newPassword) {
        String url = "jdbc:mysql://localhost:3306/not_found";
        String user = "root";
        String password = "kaka1234";

        String updateQuery = "UPDATE pengguna SET password = ? WHERE email = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
            PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {

            pstmt.setString(1, newPassword); // Hash the password in a real implementation
            pstmt.setString(2, email);

            int affectedRows = pstmt.executeUpdate();

            if (affectedRows > 0) {
                System.out.println("Kata sandi berhasil diperbarui.");
            } else {
                System.out.println("Pengguna tidak ditemukan.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetPassword;
    private javax.swing.JButton btnSendOtp;
    private javax.swing.JButton btnVerifyOtp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JTextField txtOtp;
    // End of variables declaration//GEN-END:variables
}

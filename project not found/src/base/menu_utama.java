/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package base;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author user
 */
public class menu_utama extends javax.swing.JFrame {

    /**
     * Creates new form menu_utama
     */
    public menu_utama() {
        initComponents();
        this.setExtendedState(menu_utama.MAXIMIZED_BOTH);
        
        execute();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_navbar = new javax.swing.JPanel();
        pnl_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menu_sub = new javax.swing.JPanel();
        pnl_content = new javax.swing.JPanel();
        pnl_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnl_navbar.setBackground(new java.awt.Color(153, 153, 153));
        pnl_navbar.setPreferredSize(new java.awt.Dimension(742, 80));

        javax.swing.GroupLayout pnl_navbarLayout = new javax.swing.GroupLayout(pnl_navbar);
        pnl_navbar.setLayout(pnl_navbarLayout);
        pnl_navbarLayout.setHorizontalGroup(
            pnl_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        pnl_navbarLayout.setVerticalGroup(
            pnl_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        getContentPane().add(pnl_navbar, java.awt.BorderLayout.PAGE_START);

        pnl_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pnl_sidebar.setPreferredSize(new java.awt.Dimension(250, 369));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        menu_sub.setBackground(new java.awt.Color(204, 204, 255));
        menu_sub.setLayout(new javax.swing.BoxLayout(menu_sub, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(menu_sub);

        javax.swing.GroupLayout pnl_sidebarLayout = new javax.swing.GroupLayout(pnl_sidebar);
        pnl_sidebar.setLayout(pnl_sidebarLayout);
        pnl_sidebarLayout.setHorizontalGroup(
            pnl_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        pnl_sidebarLayout.setVerticalGroup(
            pnl_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );

        getContentPane().add(pnl_sidebar, java.awt.BorderLayout.LINE_START);

        pnl_content.setBackground(new java.awt.Color(255, 255, 255));
        pnl_content.setPreferredSize(new java.awt.Dimension(642, 90));

        pnl_utama.setBackground(new java.awt.Color(255, 255, 255));
        pnl_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnl_contentLayout = new javax.swing.GroupLayout(pnl_content);
        pnl_content.setLayout(pnl_contentLayout);
        pnl_contentLayout.setHorizontalGroup(
            pnl_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );
        pnl_contentLayout.setVerticalGroup(
            pnl_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );

        getContentPane().add(pnl_content, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        pnl_utama.add(new Dashboard());
        pnl_utama.repaint();
        pnl_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu_utama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel menu_sub;
    private javax.swing.JPanel pnl_content;
    private javax.swing.JPanel pnl_navbar;
    private javax.swing.JPanel pnl_sidebar;
    private javax.swing.JPanel pnl_utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        ImageIcon iconDashboard = new ImageIcon(getClass().getResource("/picture/home.png"));
         menu_item menuDashboard    =new menu_item (iconDashboard, false,null,"Dashboard", new ActionListener() {
             
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Dashboard());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         
        ImageIcon iconMaster    =new ImageIcon(getClass().getResource("/picture/ms_master.png"));
        ImageIcon iconInputan1    =new ImageIcon(getClass().getResource("/picture/ms_master.png"));
        ImageIcon iconInputan2    =new ImageIcon(getClass().getResource("/picture/ms_master.png"));
        ImageIcon iconInputan3    =new ImageIcon(getClass().getResource("/picture/ms_master.png"));
        
         menu_item InputanBarang   =new menu_item (null, true, iconInputan1, "Input Barang",new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Input_Barang());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item InputanSuplier   =new menu_item (null, true, iconInputan2, "Input Suplier", new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Input_Suplier());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item InputanPengguna   =new menu_item (null, true, iconInputan3, "Input Pengguna", new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Input_Pengguna());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item menuMaster    =new menu_item (iconMaster, false,null,"Master",null,InputanBarang,InputanSuplier,InputanPengguna);
        
        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/picture/transaksi.png"));
         menu_item menuTransaksi   =new menu_item (iconTransaksi, false,null,"Transaksi",new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Transaksi());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
        
        ImageIcon iconLaporan = new ImageIcon(getClass().getResource("/picture/laporan.png"));
        ImageIcon iconBarangMasuk = new ImageIcon(getClass().getResource("/picture/laporan.png"));
        ImageIcon iconBarangKeluar = new ImageIcon(getClass().getResource("/picture/laporan.png"));
        
         menu_item BarangMasuk   =new menu_item (null, true, iconBarangMasuk, "Data Barang Masuk", new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Barang_Masuk());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item BarangKeluar   =new menu_item (null, true, iconBarangKeluar, "Data Barang keluar",new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Barang_Keluar());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item menuLaporan    =new menu_item (iconLaporan, false,null,"Laporan",null,BarangMasuk,BarangKeluar);
         
         
        ImageIcon iconData = new ImageIcon(getClass().getResource("/picture/data.png"));
        ImageIcon iconSuplier = new ImageIcon(getClass().getResource("/picture/data.png"));
        ImageIcon iconPengguna = new ImageIcon(getClass().getResource("/picture/data.png"));
        
         menu_item Suplier   =new menu_item (null, true, iconSuplier, "Data Suplier", new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Data_Suplier());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item Pengguna   =new menu_item (null, true, iconPengguna, "Data Pengguna", new ActionListener() {
            public void actionPerformed(ActionEvent e){
            pnl_utama.removeAll();
            pnl_utama.add(new Data_Pengguna());
            pnl_utama.repaint();
            pnl_utama.revalidate();
         }
            });
         menu_item menuData    =new menu_item (iconData, false,null,"Data",null,Suplier,Pengguna);
         

        addMenu(menuDashboard, menuMaster, menuTransaksi, menuData, menuLaporan);
    }
    
    private void addMenu(menu_item... menu) {
        for (int i = 0; i < menu.length; i++) {
            menu_sub.add(menu[i]);
            ArrayList<menu_item> subMenu = menu[i].getSubMenu(); 
            for (menu_item m : subMenu) {
                addMenu(m);
            }
        }
    menu_sub.revalidate();
    }
}
